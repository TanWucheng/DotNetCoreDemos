<UserControl
    x:Class="CoreWpfDemo.UserControls.Dialogs"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="800"
    d:DesignWidth="1920"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Margin="32" TextWrapping="Wrap">Dialogs are supported via the DialogHost control which was designed to work with MVVM/binding, code-behind, routed commands, and a pure code-based API.</TextBlock>

        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto">
            <Grid VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                </Grid.ColumnDefinitions>

                <!--#region SAMPLE 1-->
                <StackPanel Orientation="Vertical">
                    <TextBlock
                        Margin="8,0,8,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        TextWrapping="Wrap">
                        SAMPLE 1: Localized dialog encapsulating specific content, launched from a routed command, response handled in code-behind.
                    </TextBlock>
                    <materialDesign:DialogHost
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        DialogClosing="Sample1_DialogHost_OnDialogClosing">
                        <materialDesign:DialogHost.DialogContent>
                            <StackPanel Margin="16">
                                <TextBlock>Add a new fruit.</TextBlock>
                                <TextBox
                                    x:Name="FruitTextBox"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Stretch" />
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button
                                        Margin="0,8,8,0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand"
                                        IsDefault="True"
                                        Style="{StaticResource MaterialDesignFlatButton}">
                                        <Button.CommandParameter>
                                            <system:Boolean>True</system:Boolean>
                                        </Button.CommandParameter>
                                        ACCEPT
                                    </Button>
                                    <Button
                                        Margin="0,8,8,0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand"
                                        IsCancel="True"
                                        Style="{StaticResource MaterialDesignFlatButton}">
                                        <Button.CommandParameter>
                                            <system:Boolean>False</system:Boolean>
                                        </Button.CommandParameter>
                                        CANCEL
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </materialDesign:DialogHost.DialogContent>
                        <Border
                            MinWidth="256"
                            MinHeight="256"
                            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            BorderThickness="1"
                            ClipToBounds="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox x:Name="FruitListBox">
                                    <ListBoxItem>Apple</ListBoxItem>
                                    <ListBoxItem>Banana</ListBoxItem>
                                    <ListBoxItem>Pear</ListBoxItem>
                                </ListBox>
                                <materialDesign:ColorZone
                                    Grid.Row="1"
                                    Effect="{DynamicResource MaterialDesignShadowDepth5}"
                                    Mode="PrimaryMid">
                                    <TextBlock Margin="16">Fruit Bowl</TextBlock>
                                </materialDesign:ColorZone>
                                <Button
                                    Grid.Row="0"
                                    Margin="0,0,28,-20"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                                    <materialDesign:PackIcon
                                        Width="22"
                                        Height="22"
                                        Kind="Plus" />
                                </Button>
                            </Grid>
                        </Border>
                    </materialDesign:DialogHost>
                </StackPanel>
                <!--#endregion-->

                <!--#region SAMPLE 2-->
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="1"
                    Orientation="Vertical">
                    <TextBlock
                        Margin="8,0,8,0"
                        VerticalAlignment="Top"
                        TextWrapping="Wrap">
                        SAMPLE 2: Top level dialog,  using OpenDialog, passing content via the Parameter. You can pass a view model, provided a corresponding DataTemplate can be found in the scope of the root DialogHost.
                    </TextBlock>
                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="0"
                        VerticalAlignment="Center">
                        <!--  the request to open the dialog will bubble up to the top-most DialogHost, but we can used the attached property based event to handle the response  -->
                        <Button
                            Width="128"
                            materialDesign:DialogHost.DialogClosingAttached="Sample2_DialogHost_OnDialogClosing"
                            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                            <Button.CommandParameter>
                                <StackPanel Margin="16">
                                    <ProgressBar
                                        Margin="16"
                                        HorizontalAlignment="Center"
                                        IsIndeterminate="True"
                                        Style="{DynamicResource MaterialDesignCircularProgressBar}"
                                        Value="0" />
                                    <Button
                                        HorizontalAlignment="Center"
                                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                        CommandParameter="Sample2Cancel"
                                        IsCancel="True"
                                        Style="{StaticResource MaterialDesignFlatButton}">
                                        CANCEL
                                    </Button>
                                </StackPanel>
                            </Button.CommandParameter>
                            PASS VIEW
                        </Button>
                        <Button
                            Width="128"
                            Margin="0,32,0,0"
                            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                            <Button.CommandParameter>
                                <!--  the simplest view model of all, a DateTime. the view can be found in the resources of MainWindow.xaml  -->
                                <system:DateTime>1966-JUL-30</system:DateTime>
                            </Button.CommandParameter>
                            PASS MODEL
                        </Button>
                    </StackPanel>
                </StackPanel>

                <!--#endregion-->

                <!--#region SAMPLE 3-->
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="2"
                    Orientation="Vertical">
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="2"
                        Margin="8,0,8,0"
                        VerticalAlignment="Top"
                        TextWrapping="Wrap">
                        SAMPLE 3: Open and listen to the dialog entirely from code in a view model.
                    </TextBlock>
                    <!--  Executes a command on DialogsViewModel.cs, which will launch the dialog from code  -->
                    <StackPanel Grid.Row="0" Grid.Column="0">
                        <Button Width="128" Command="{Binding RunDialogCommand}">
                            RUN CODE
                        </Button>
                        <Button
                            Width="128"
                            Margin="0,32,0,0"
                            Command="{Binding RunExtendedDialogCommand}">
                            EXTENDED
                        </Button>
                    </StackPanel>
                </StackPanel>
                <!--#endregion-->

                <!--#region SAMPLE 4-->
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="3"
                    Orientation="Vertical">
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="3"
                        Margin="8,0,8,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        TextWrapping="Wrap">
                        SAMPLE 4: Dialog managed from view model using IsOpen and custom commands (ignoring the provided routed commands). This also uses a custom brush to dim the background.
                    </TextBlock>
                    <materialDesign:DialogHost
                        Grid.Row="0"
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        CloseOnClickAway="True"
                        DialogContent="{Binding Sample4Content}"
                        IsOpen="{Binding IsSample4DialogOpen}"
                        OverlayBackground="{DynamicResource PrimaryHueDarkBrush}">
                        <Border
                            MinWidth="256"
                            MinHeight="256"
                            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            BorderThickness="1"
                            ClipToBounds="True">
                            <Button
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding OpenSample4DialogCommand}">
                                RUN
                            </Button>
                        </Border>
                    </materialDesign:DialogHost>
                </StackPanel>
                <!--#endregion-->

                <!--#region SAMPLE 5-->
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="4"
                    Orientation="Vertical">
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="4"
                        Margin="8,0,8,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        TextWrapping="Wrap">
                        SAMPLE 5: Localized dialog encapsulating specific content, launched from a routed command. This dialog is contained inside of the visual tree rather than the normal dialog which uses a popup.
                    </TextBlock>
                    <materialDesign:DialogHost
                        Grid.Row="0"
                        Grid.Column="0"
                        DialogClosing="Sample5_DialogHost_OnDialogClosing"
                        DialogMargin="8"
                        Style="{StaticResource MaterialDesignEmbeddedDialogHost}">
                        <materialDesign:DialogHost.DialogContent>
                            <StackPanel Margin="16">
                                <TextBlock>Add a new animal.</TextBlock>
                                <TextBox
                                    x:Name="AnimalTextBox"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Stretch" />
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button
                                        Margin="0,8,8,0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand"
                                        IsDefault="True"
                                        Style="{StaticResource MaterialDesignFlatButton}">
                                        <Button.CommandParameter>
                                            <system:Boolean>True</system:Boolean>
                                        </Button.CommandParameter>
                                        ACCEPT
                                    </Button>
                                    <Button
                                        Margin="0,8,8,0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand"
                                        IsCancel="True"
                                        Style="{StaticResource MaterialDesignFlatButton}">
                                        <Button.CommandParameter>
                                            <system:Boolean>False</system:Boolean>
                                        </Button.CommandParameter>
                                        CANCEL
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </materialDesign:DialogHost.DialogContent>
                        <Border
                            HorizontalAlignment="Stretch"
                            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            BorderThickness="1"
                            ClipToBounds="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox x:Name="AnimalListBox">
                                    <ListBoxItem>Dog</ListBoxItem>
                                    <ListBoxItem>Cat</ListBoxItem>
                                    <ListBoxItem>Platypus</ListBoxItem>
                                </ListBox>
                                <materialDesign:ColorZone
                                    Grid.Row="1"
                                    Effect="{DynamicResource MaterialDesignShadowDepth5}"
                                    Mode="PrimaryMid">
                                    <TextBlock Margin="16">Petting Zoo</TextBlock>
                                </materialDesign:ColorZone>
                                <Button
                                    Grid.Row="0"
                                    Margin="0,0,28,-20"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                                    <materialDesign:PackIcon
                                        Width="22"
                                        Height="22"
                                        Kind="Plus" />
                                </Button>
                            </Grid>
                        </Border>
                    </materialDesign:DialogHost>
                </StackPanel>
                <!--#endregion-->
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>



